getwd()
data <- read.table("./data/data.csv", header=T, sep=",",dec=".")
View(data)
data <- read.table("./data/data.csv", header=T, sep=",",dec=".", enconding="UTF-8")
data <- read.table("./data/data.csv", header=T, sep=",",dec=".", enconding="UTF8")
data <- read.table("./data/data.csv", header=T, sep=",",dec=".", enconding="utf-8")
data <- read.table("./data/data.csv", header=T, sep=",",dec=".", enconding="UTF-8")
data <- read.table("./data/data.csv", header=T, sep=",", dec=".", enconding="UTF-8")
Enconding(data) <- "UTF-8"
data <- read.csv("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
View(data)
View(data)
View(data)
View(data)
View(data)
data <- read.csv("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
View(data)
View(data)
data <- read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data[0]
data[1]
data[2:5]
View(data)
View(data)
data = data[2:5]
data = data[2:5]
data = data[2:5]
data <- read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data <- read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
View(data)
View(data)
data <- read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data <- read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
View(data)
c(1:10)
c(1:10)
c(1:10)
c(2:10)
c(1:10)
x
x
x <- array (c (1:10) , dim = c(2 ,5) )
x
A <- matrix (c (1:10) ,2 ,5 ,1)
A
View(x)
A
A <- matrix (c (1:10))
A
, 2 ,5 ,1
A <- matrix (c (1:10), 2 ,5 ,1)
A
A <- matrix (c (1:10), 2 ,5)
A
source('C:/Users/jmess/Workspace/R/Atividade 1 - EstatÃ­stica de Descritiva/main.R')
View(data)
View(data)
table(data[4])
c(1,1,0)
-array (c(0 ,1 ,5) ,dim=c(3 ,1) )
-array (c(0 ,1 ,5) ,dim=c(3 ,1) )
array (c(0 ,1 ,5) ,dim=c(3 ,1) )
data[5][1] = "IMC"
data[4][1] = "IMC"
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data[5][1]
data[4][1]
data[4][2]
data[4][1
]
data[4][1]
data[4][3]
data[4](3)
data[4][1]
data[5] = data[4] * data[5]^2
x= data[4] / data[5]^2
x= data[4] / data[3]^2
x
x= data[3] / data[4]^2
x
data = data +  imc(data[3], data[4])
imc = function (weight, higher) {
return (weight / higher^2)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data = data + imc(data[3], data[4])
freq_imc = table(data[4])
data = data + imc(data[3], data[4])
x = imc(data[3], data[4])
x
imc = function (weight, higher) {
return (weight / (higher^2))
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
x = imc(data[3], data[4])
freq_imc = table(data[4])
x
dados["IMC"] = imc(data$Peso, data$Altura)
data["IMC"] = imc(data$Peso, data$Altura)
data
imc = function (weight, higher) {
return (weight / (higher^2))
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data[4])
imc = function (weight, higher) {
return (weight / (higher^2))
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
freq_imc
imc = function (weight, higher) {
imc = weight / (higher^2)
imc = round(imc, digits=2)
return imc
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
return(imc)
imc = function (weight, higher) {
imc = weight / (higher^2)
imc = round(imc, digits=2)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
imc = function (weight, higher) {
imc = weight / (higher^2)
imc = round(imc, digits=2)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
freq_imc
imc = function (weight, higher) {
imc = weight / (higher^2)
imc = round(imc, digits=1)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
freq_imc
imc = function (weight, higher) {
imc = weight / (higher^2)
imc = round(imc, digits=0)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura)
freq_imc = table(data$IMC)
freq_imc
imc = function (weight, higher, amount_digits) {
imc = weight / (higher^2)
imc = round(imc, digits=amount_digits)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura, 0)
freq_imc = table(data$IMC)
freq_imc
mean_imc = mean(data$imc)
mean_imc = mean(data$IMC)
mean_imc
median_imc
median_imc = median(data$IMC)
median_imc
$decis
help(decis)
??decis
??percentil
??per
four_decil = quantile(data[IMC], seq(0.10))
four_decil = quantile(data$IMC, seq(0.10))
four_decil
four_decil = quantile(data$IMC, seq(0.10, 0.9))
four_decil
four_decil = quantile(data$IMC, seq(0.10, 0.9, 0.1))
four_decil
?seq
seq(0.10, 0.9, 0.1)
four_decil = quantile(data$IMC, 0.4
four_decil = quantile(data$IMC, 0.4)
four_decil = quantile(data$IMC, 0.4)
four_decil
split(data$IMC)
split(data$IMC, 1)
split(data$IMC, 2)
?split
split(data, data%IMC)
?split
split(data, data$IMC)
split(data, data$IMC, drop= if f > 20)
split(data, data$IMC, drop= if factor > 20)
?group
??group
split(data, 20)
split(data, 1)
?factor
f
?factor
f = factor(c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3"))
f
split(data, f)
substring("statistics", 1:10, 1:10)
?split
f = factor(c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3"),
c(< 16))
f = factor(c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3"),
c(0:17), c(17:18.49))
c(0:17), c(range(17:18.49))
f = factor(c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3"),
c(0:17), c(range(17:18.49)))
range(17:18.49)
c(17:18.49)
group_by(data)
group_by(data$IMC)
grouping(data$IMC)
library(tidyr)
library(dplyr)
require(dplyr)
require(dplyr)
install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
imc = function (weight, higher, amount_digits) {
imc = weight / (higher^2)
imc = round(imc, digits=amount_digits)
return(imc)
}
data = read.table("./data/data.csv", header=T, sep=",", dec=".",fileEncoding="UTF-8")
data = data[2:5]
data["IMC"] = imc(data$Peso, data$Altura, 0)
freq_imc = table(data$IMC)
mean_imc = mean(data$IMC)
mean_imc
median_imc = median(data$IMC)
median_imc
four_decil = quantile(data$IMC, 0.4)
four_decil
imc_division = data
f = factor(c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3"))
grouping(data$IMC)
split(data, f)
grouping(data$IMC)
install.packages(c("dplyr", "tidyr"))
groub_by(data$IMC)
library(tidyr)
library(dplyr)
library(dplyr)
library(dplyr)
groub_by(data$IMC)
groub_by(data$IMC) %>%
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
require(dplyr)
groub_by(data$IMC)
groub_by(data$IMC, f)
groub_by(data$IMC, f) %>5 data%imc
groub_by(data$IMC, f) %>5 data$imc
groub_by(data$IMC, f) %>% data$imc
groub_by(data$IMC, f) %>% data$imc
groub_by(data$IMC, f) %>% data$imc
groub_by(data$IMC, f) %>% data$imc
groub_by(data$IMC, f) %>% data$imc
groub_by(data$IMC, f) %>% data$IMC
group_by(data$IMC, f) %>% data$IMC
group_by(data$IMC, f) %>% data$IMC
f
f = c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal", "Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3")
f
f = c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3")
f
group_by(data$IMC, f) %>% data$IMC
group_by(data, f) %>% data$IMC
f = c("Muito Abaixo do Peso", "Abaixo do Peso", "Peso Normal",
"Acima do Peso", "Obesidade 1", "Obesidade 2", "Obesidade 3")
group_by(data, f) %>% data$IMC
group_by(data, t(f)) %>% data$IMC
group_by(data, f) %>% data$IMC
